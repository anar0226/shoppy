// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Safe way to get environment variable
String? _getEnv(String key) {
  try {
    return dotenv.env[key];
  } catch (e) {
    // dotenv not initialized, return null to use fallback values
    return null;
  }
}

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get web => FirebaseOptions(
        apiKey:
            _getEnv('F_API_KEY') ?? 'AIzaSyBv9U2CdHSEa5PBBlYnYulgG1cRxQfbhwo',
        appId:
            _getEnv('F_APP_ID') ?? '1:110394685689:web:a5d998cdc2fc3b0842ca28',
        messagingSenderId: _getEnv('F_SENDER_ID') ?? '110394685689',
        projectId: _getEnv('F_PROJECT_ID') ?? 'shoppy-6d81f',
        authDomain: 'shoppy-6d81f.firebaseapp.com',
        storageBucket: 'shoppy-6d81f.firebasestorage.app',
        measurementId: 'G-BCGNM9C9ED',
      );

  static FirebaseOptions get android => FirebaseOptions(
        apiKey:
            _getEnv('F_API_KEY') ?? 'AIzaSyBhGaI4YU6skCekK8AG1d70j00WFZfog70',
        appId: _getEnv('F_APP_ID') ??
            '1:110394685689:android:8848cbe8fc068acf42ca28',
        messagingSenderId: _getEnv('F_SENDER_ID') ?? '110394685689',
        projectId: _getEnv('F_PROJECT_ID') ?? 'shoppy-6d81f',
        storageBucket: 'shoppy-6d81f.firebasestorage.app',
      );

  static FirebaseOptions get ios => FirebaseOptions(
        apiKey:
            _getEnv('F_API_KEY') ?? 'AIzaSyCRDUWPZ3MaxcSPonfO8ubeKqqkmyVyV78',
        appId:
            _getEnv('F_APP_ID') ?? '1:110394685689:ios:be2eb9a923aac7e342ca28',
        messagingSenderId: _getEnv('F_SENDER_ID') ?? '110394685689',
        projectId: _getEnv('F_PROJECT_ID') ?? 'shoppy-6d81f',
        storageBucket: 'shoppy-6d81f.firebasestorage.app',
        iosBundleId: 'com.avii.marketplace',
      );

  static FirebaseOptions get macos => FirebaseOptions(
        apiKey:
            _getEnv('F_API_KEY') ?? 'AIzaSyCRDUWPZ3MaxcSPonfO8ubeKqqkmyVyV78',
        appId:
            _getEnv('F_APP_ID') ?? '1:110394685689:ios:be2eb9a923aac7e342ca28',
        messagingSenderId: _getEnv('F_SENDER_ID') ?? '110394685689',
        projectId: _getEnv('F_PROJECT_ID') ?? 'shoppy-6d81f',
        storageBucket: 'shoppy-6d81f.firebasestorage.app',
        iosBundleId: 'com.avii.marketplace',
      );

  static FirebaseOptions get windows => FirebaseOptions(
        apiKey:
            _getEnv('F_API_KEY') ?? 'AIzaSyBv9U2CdHSEa5PBBlYnYulgG1cRxQfbhwo',
        appId:
            _getEnv('F_APP_ID') ?? '1:110394685689:web:6fc9e10197b847ab42ca28',
        messagingSenderId: _getEnv('F_SENDER_ID') ?? '110394685689',
        projectId: _getEnv('F_PROJECT_ID') ?? 'shoppy-6d81f',
        authDomain: 'shoppy-6d81f.firebaseapp.com',
        storageBucket: 'shoppy-6d81f.firebasestorage.app',
        measurementId: 'G-KE94PVC1ZW',
      );
}
